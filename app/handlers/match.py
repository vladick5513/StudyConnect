from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from app.bot.crud import UserRepository
from app.database import async_session_factory

router = Router()


@router.message(Command("search"))
async def cmd_search(message: Message):
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="–ü–æ –≤–æ–∑—Ä–∞—Å—Ç—É", callback_data="search_age"))
    builder.add(InlineKeyboardButton(text="–ü–æ —Å—Ç—Ä–∞–Ω–µ", callback_data="search_location"))
    builder.add(InlineKeyboardButton(text="–ü–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º", callback_data="search_subjects"))

    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–π –ø–æ–∏—Å–∫–∞:",
        reply_markup=builder.as_markup()
    )


@router.callback_query(F.data.startswith("search_"))
async def process_search(callback: CallbackQuery):
    search_type = callback.data.split("_")[1]

    async with async_session_factory() as session:
        repo = UserRepository(session)
        current_user = await repo.get_user_by_telegram_id(callback.from_user.id)

        if not current_user:
            await callback.message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é /register")
            await callback.answer()
            return

        if search_type == "age":
            matches = await repo.find_matches_by_age(callback.from_user.id, current_user.age)
        elif search_type == "location":
            matches = await repo.find_matches_by_location(callback.from_user.id, current_user.location)
        elif search_type == "subjects":
            matches = await repo.find_matches_by_subjects(callback.from_user.id, current_user.subjects)

        if not matches:
            await callback.message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
            await callback.answer()
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏
        response = "–ù–∞–π–¥–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä—Ç–Ω–µ—Ä—ã:\n\n"
        for match in matches:
            response += f"üéì –ü–∞—Ä—Ç–Ω–µ—Ä\n"
            response += f"–°—Ç—Ä–∞–Ω–∞: {match.location}\n"
            response += f"–Ø–∑—ã–∫: {match.language}\n"
            response += f"–í–æ–∑—Ä–∞—Å—Ç: {match.age}\n"
            response += f"–ü—Ä–µ–¥–º–µ—Ç—ã: {', '.join(match.subjects)}\n"

            # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if match.username:
                response += f"–ü—Ä–æ—Ñ–∏–ª—å: @{match.username}\n"
            else:
                response += f"Telegram ID: {match.telegram_id}\n"

            response += "\n"

        await callback.message.answer(response)
        await callback.answer()